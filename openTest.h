#pragma once
#ifndef _OPEN_TEST_H
#define _OPEN_TEST_H

using namespace std;

namespace tests
{
	void autoLog(const char *status);
	void newTest(const char *function, const char *testName);

	//-----------------------------------------------------------------
	// Expect true, assert true
	//-----------------------------------------------------------------
	bool EXPECT_TRUE(bool condition);
	bool ASSERT_TRUE(bool condition);

	//-----------------------------------------------------------------
	// Expect false, assert false
	//-----------------------------------------------------------------
	bool EXPECT_FALSE(bool condition);
	bool ASSERT_FALSE(bool condition);

	//-----------------------------------------------------------------
	// Expect equal, assert equal
	//-----------------------------------------------------------------
	template <typename type>
	bool EXPECT_EQUAL(type a, type b);
	template <typename type>
	bool ASSERT_EQUAL(type a, type b);

	//-----------------------------------------------------------------
	// Expect not equal, assert not equal
	//-----------------------------------------------------------------
	template <typename type>
	bool EXPECT_NOT_EQUAL(type a, type b);
	template <typename type>
	bool ASSERT_NOT_EQUAL(type a, type b);

	//-----------------------------------------------------------------
	// Expect less than, assert less than
	//-----------------------------------------------------------------
	template <typename type>
	bool EXPECT_LESS_THAN(type a, type b);
	template <typename type>
	bool ASSERT_LESS_THAN(type a, type b);

	//-----------------------------------------------------------------
	// Expect less than equal, assert less than equal
	//-----------------------------------------------------------------
	template <typename type>
	bool EXPECT_LESS_THAN_EQ(type a, type b);
	template <typename type>
	bool ASSERT_LESS_THAN_EQ(type a, type b);

	//-----------------------------------------------------------------
	// Expect greater than, assert greater than
	//-----------------------------------------------------------------
	template <typename type>
	bool EXPECT_GREATER_THAN(type a, type b);
	template <typename type>
	bool ASSERT_GREATER_THAN(type a, type b);

	//-----------------------------------------------------------------
	// Expect greater than equal, assert greather than equal
	//-----------------------------------------------------------------
	template <typename type>
	bool EXPECT_GREATER_THAN_EQ(type a, type b);
	template <typename type>
	bool ASSERT_GREATER_THAN_EQ(type a, type b);
};

#endif /* _OPEN_TEST_H */